{"version":3,"sources":["../src/route-lazy.ts"],"names":["RouteLazy","ctor","options","REACT_LAZY_TYPE","_ctor","_result","render","bind","resolved","updaters","args","Promise","resolve","reject","_resolve","v","__esModule","default","forEach","updater","prototype","React","Component","component","Error","then","catch","arguments","props","ref","createElement","hasRouteLazy","route","config","components","Object","keys","key","hasMatchedRouteLazy","matched","some","r","lazyImport","importMethod"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { REACT_LAZY_TYPE } from './route-guard';\nimport { RouteLazyUpdater } from './globals';\n\nexport class RouteLazy {\n\n  private _ctor: any\n\n  private _result: any;\n\n  private resolved: boolean;\n\n  $$typeof: Symbol | number = REACT_LAZY_TYPE;\n\n  options: any;\n\n  updaters: RouteLazyUpdater[] = [];\n\n\n  constructor(\n    ctor: any,\n    options?: any\n  ) {\n    this._ctor = ctor;\n    this._result = null;\n\n    this.options = options;\n    this.render = this.render.bind(this);\n\n    this.resolved = false;\n    this.updaters = [];\n  }\n\n  toResolve(...args: any[]): Promise<React.FunctionComponent | React.ComponentClass> {\n    return new Promise(async (resolve, reject) => {\n      if (this.resolved) return resolve(this._result);\n\n      let _resolve = (v:\n        (React.FunctionComponent | React.ComponentClass)\n        & { __esModule?: boolean; default: any }) => {\n        v = (v && v.__esModule) ? v.default : v;\n        this.updaters.forEach(updater => v = updater(v) as any || v);\n        this._result = v;\n        this.resolved = true;\n        resolve(v);\n      };\n      let component = this._ctor.prototype instanceof React.Component\n        ? this._ctor\n        : this._ctor instanceof Promise\n          ? await this._ctor\n          : this._ctor(...args);\n\n      if (!component) throw new Error('component should not null!');\n\n      if (component instanceof Promise) {\n        component.then(_resolve).catch(function () { return reject(...arguments); });\n      } else _resolve(component);\n    });\n  }\n\n  render(props: object, ref: any) {\n    if (!this.resolved || !this._result) return null;\n    return React.createElement(this._result, { ...props, ref });\n  }\n\n}\n\nexport function hasRouteLazy(route: any) {\n  const config = route.config || route;\n  if (config.components instanceof RouteLazy) return true;\n  if (config.components) {\n    for (let key of Object.keys(config.components)) {\n      if (config.components[key] instanceof RouteLazy) return true;\n    }\n  }\n  return false;\n}\n\nexport function hasMatchedRouteLazy(matched: any[]) {\n  return matched && matched.some(r => hasRouteLazy(r));\n}\n\nexport function lazyImport(importMethod: Function, options?: any) {\n  return new RouteLazy(importMethod, options || {});\n}\n"],"file":"route-lazy.js"}