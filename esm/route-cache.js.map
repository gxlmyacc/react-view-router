{"version":3,"sources":["../src/route-cache.ts"],"names":["RouterCache","cached","seed","data","id","key","ret","routeCache"],"mappings":";;;;;;;;;;;;;;;IAAMA,W;;;AAKJ,yBAAc;AAAA;;AAAA;;AAAA;;AACZ,SAAKC,MAAL,GAAc,EAAd;AACA,SAAKC,IAAL,GAAY,CAAZ;AACD;;;;2BAEMC,I,EAA2B;AAAA,UAAhBC,EAAgB,uEAAH,CAAG;AAChC,UAAMC,GAAG,6BAAsBD,EAAE,cAAOA,EAAP,SAAe,EAAvC,SAA4C,EAAE,KAAKF,IAAnD,MAAT;AACA,WAAKD,MAAL,CAAYI,GAAZ,IAAmBF,IAAnB;AACA,aAAOE,GAAP;AACD;;;0BAEKH,I,EAAe;AACnB,UAAI,CAACA,IAAL,EAAW;AACX,UAAII,GAAG,GAAG,KAAKL,MAAL,CAAYC,IAAZ,CAAV;AACA,aAAO,KAAKD,MAAL,CAAYC,IAAZ,CAAP;AACA,aAAOI,GAAP;AACD;;;;;;AAGH,IAAMC,UAAU,GAAG,IAAIP,WAAJ,EAAnB;eAGeO,U","sourcesContent":["class RouterCache {\r\n\r\n  private cached: { [key: string]: any };\r\n  private seed: number;\r\n\r\n  constructor() {\r\n    this.cached = {};\r\n    this.seed = 0;\r\n  }\r\n\r\n  create(data: any, id: number = 0) {\r\n    const key = `[route_cache_id:${id ? `[${id}]` : ''}${++this.seed}]`;\r\n    this.cached[key] = data;\r\n    return key;\r\n  }\r\n\r\n  flush(seed?: string) {\r\n    if (!seed) return;\r\n    let ret = this.cached[seed];\r\n    delete this.cached[seed];\r\n    return ret;\r\n  }\r\n\r\n}\r\nconst routeCache = new RouterCache();\r\n\r\n\r\nexport default routeCache;\r\n"],"file":"route-cache.js"}