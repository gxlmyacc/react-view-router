{"version":3,"sources":["../src/route-cache.ts"],"names":["RouterCache","cached","seed","data","id","key","ret","routeCache"],"mappings":";;;;;;;;;;;;;;;IAAMA,W;;;AAMJ,yBAAc;AAAA;;AAAA;;AAAA;;AACZ,SAAKC,MAAL,GAAc,EAAd;AACA,SAAKC,IAAL,GAAY,CAAZ;AACD;;;;2BAEMC,I,EAA2B;AAAA,UAAhBC,EAAgB,uEAAH,CAAG;AAChC,UAAMC,GAAG,6BAAsBD,EAAE,cAAOA,EAAP,SAAe,EAAvC,SAA4C,EAAE,KAAKF,IAAnD,MAAT;AACA,WAAKD,MAAL,CAAYI,GAAZ,IAAmBF,IAAnB;AACA,aAAOE,GAAP;AACD;;;0BAEKH,I,EAAe;AACnB,UAAI,CAACA,IAAL,EAAW;AACX,UAAII,GAAG,GAAG,KAAKL,MAAL,CAAYC,IAAZ,CAAV;AACA,aAAO,KAAKD,MAAL,CAAYC,IAAZ,CAAP;AACA,aAAOI,GAAP;AACD;;;;;;AAGH,IAAMC,UAAU,GAAG,IAAIP,WAAJ,EAAnB;eAGeO,U","sourcesContent":["class RouterCache {\n\n  private cached: { [key: string]: any };\n\n  private seed: number;\n\n  constructor() {\n    this.cached = {};\n    this.seed = 0;\n  }\n\n  create(data: any, id: number = 0) {\n    const key = `[route_cache_id:${id ? `[${id}]` : ''}${++this.seed}]`;\n    this.cached[key] = data;\n    return key;\n  }\n\n  flush(seed?: string) {\n    if (!seed) return;\n    let ret = this.cached[seed];\n    delete this.cached[seed];\n    return ret;\n  }\n\n}\nconst routeCache = new RouterCache();\n\n\nexport default routeCache;\n"],"file":"route-cache.js"}