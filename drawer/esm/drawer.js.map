{"version":3,"sources":["../src/drawer.ts"],"names":["CAN_USE_DOM","window","document","createElement","Drawer","props","closed","isTouching","container","drawerRef","getContainer","bind","removeContainer","onAnimateAppear","onAnimateLeave","onTouchMove","onTouchEnd","close","onMaskClick","restoreOverflow","event","dir","deltaX","Math","max","style","webkitTransform","transform","touchThreshold","viewLength","getBoundingClientRect","width","classList","add","actionClass","setTimeout","remove","delay","parentNode","removeChild","containerId","prefixCls","Date","getTime","setAttribute","body","appendChild","zIndex","undefined","wrapStyle","getZIndexStyle","maskStyle","transitionName","maskTransitionName","animation","maskAnimation","dialogElement","React","key","role","ref","el","className","open","children","getTransitionName","Animate","showProp","onAppear","onLeave","component","transitionAppear","touch","Swipeable","onSwiping","onSwiped","overflow","onAnimateStart","afterClose","e","onClose","maskClosable","target","currentTarget","drawer","getDrawerElement","mask","getMaskStyle","maskProps","onClick","getMaskTransitionName","ReactDOM","createPortal","Component","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Animate from 'rc-animate';\nimport { Swipeable } from 'react-swipeable';\n\nconst CAN_USE_DOM = !!(\n  typeof window !== 'undefined'\n  && window.document\n  && window.document.createElement\n);\n\ntype DrawerProps = {\n  touchThreshold: number\n} & { [key: string]: any };\n\ntype DrawerState = {\n\n};\n\n\nclass Drawer extends React.Component<DrawerProps, DrawerState> {\n\n  closed: boolean;\n\n  isTouching: boolean | null;\n\n  drawerRef: HTMLElement | null;\n\n  container: HTMLElement | null;\n\n  static defaultProps: {\n    prefixCls: string,\n    className: string,\n    mask: boolean,\n    open: boolean,\n    maskClosable: boolean,\n    touch: boolean,\n    touchThreshold: number,\n    delay: number,\n  };\n\n  constructor(props: DrawerProps) {\n    super(props);\n    this.closed = false;\n    this.isTouching = null;\n    this.container = null;\n    this.drawerRef = null;\n    this.getContainer = this.getContainer.bind(this);\n    this.removeContainer = this.removeContainer.bind(this);\n    this.onAnimateAppear = this.onAnimateAppear.bind(this);\n    this.onAnimateLeave = this.onAnimateLeave.bind(this);\n    this.onTouchMove = this.onTouchMove.bind(this);\n    this.onTouchEnd = this.onTouchEnd.bind(this);\n    this.close = this.close.bind(this);\n    this.onMaskClick = this.onMaskClick.bind(this);\n  }\n\n  componentWillUnmount() {\n    this.restoreOverflow();\n    this.removeContainer();\n  }\n\n  onTouchMove(event: { dir: string, deltaX: number }) {\n    if (!this.drawerRef) return;\n    if (this.isTouching === null) {\n      this.isTouching = event.dir === 'Right';\n      if (!this.isTouching) return;\n    }\n    if (this.isTouching === false) return;\n\n    const drawerRef = this.drawerRef;\n    let deltaX = Math.max(-event.deltaX, 0);\n    drawerRef.style.webkitTransform = drawerRef.style.transform = `translateX(${deltaX}px)`;\n  }\n\n  onTouchEnd(event: { dir: string, deltaX: number }) {\n    if (this.isTouching && -event.deltaX > this.props.touchThreshold) {\n      const drawerRef = this.drawerRef;\n      if (!drawerRef) return;\n      const viewLength = drawerRef.getBoundingClientRect().width;\n      drawerRef.classList.add('touched');\n      let close: Function | null = null;\n      let actionClass = '';\n      if (-event.deltaX > (viewLength / 2)) {\n        actionClass = 'touch-hide';\n        close = () => {\n          this.closed = true;\n          this.close();\n        };\n      } else actionClass = 'touch-restore';\n      drawerRef.style.webkitTransform = drawerRef.style.transform = '';\n      if (actionClass) drawerRef.classList.add(actionClass);\n      setTimeout(() => {\n        close && close();\n        drawerRef.classList.remove(actionClass);\n        drawerRef.classList.remove('touched');\n      }, this.props.delay);\n    }\n    this.isTouching = null;\n  }\n\n  removeContainer() {\n    if (!this.container) return;\n    if (this.container.parentNode) this.container.parentNode.removeChild(this.container);\n    this.container = null;\n  }\n\n  getContainer() {\n    if (!this.container) {\n      const container = document.createElement('div');\n      const containerId = `${this.props.prefixCls}-container-${(new Date().getTime())}`;\n      container.setAttribute('id', containerId);\n      document.body.appendChild(container);\n      this.container = container;\n    }\n    return this.container;\n  }\n\n  getZIndexStyle() {\n    const style: { zIndex?: number } = {};\n    if (this.props.zIndex !== undefined) style.zIndex = this.props.zIndex;\n    return style;\n  }\n\n  getWrapStyle() {\n    const wrapStyle = this.props.wrapStyle || {};\n    return { ...this.getZIndexStyle(), ...wrapStyle };\n  }\n\n  getMaskStyle() {\n    const maskStyle = this.props.maskStyle || {};\n    return { ...this.getZIndexStyle(), ...maskStyle };\n  }\n\n  getMaskTransitionName() {\n    if (this.closed) return '';\n    const props = this.props;\n    let transitionName = props.maskTransitionName;\n    const animation = props.maskAnimation;\n    if (!transitionName && animation) {\n      transitionName = `${props.prefixCls}-${animation}`;\n    }\n    return transitionName;\n  }\n\n  getTransitionName() {\n    if (this.closed) return '';\n    const props = this.props;\n    let transitionName = props.transitionName;\n    const animation = props.animation;\n    if (!transitionName && animation) {\n      transitionName = `${props.prefixCls}-${animation}`;\n    }\n    return transitionName;\n  }\n\n  getDrawerElement() {\n    const props = this.props;\n    const prefixCls = props.prefixCls;\n\n    let dialogElement = React.createElement('div', {\n      key: 'drawer-element',\n      role: 'document',\n      ref: (el: HTMLElement) => this.drawerRef = el,\n      style: props.style || {},\n      className: `${prefixCls} ${props.className || ''}`,\n      open: props.open,\n    }, props.children);\n\n    const transitionName = this.getTransitionName();\n    if (transitionName) {\n      dialogElement = React.createElement(Animate, {\n        key: 'drawer',\n        showProp: 'open',\n        onAppear: this.onAnimateAppear,\n        onLeave: this.onAnimateLeave,\n        transitionName,\n        component: '',\n        transitionAppear: true,\n      }, dialogElement) as any;\n    }\n\n    if (this.props.touch) {\n      dialogElement = React.createElement(Swipeable, {\n        className: `${props.prefixCls}-wrap`,\n        onSwiping: this.onTouchMove,\n        onSwiped: this.onTouchEnd,\n      }, dialogElement) as any;\n    }\n\n    return dialogElement;\n  }\n\n  restoreOverflow() {\n    if (document.body.style.overflow) document.body.style.overflow = '';\n  }\n\n  onAnimateAppear() {\n    document.body.style.overflow = 'hidden';\n    if (this.props.onAnimateStart) this.props.onAnimateStart();\n  }\n\n  onAnimateLeave() {\n    this.restoreOverflow();\n    if (this.props.onAnimateLeave) this.props.onAnimateLeave();\n    if (this.props.afterClose) this.props.afterClose();\n  }\n\n  close(e?: any) {\n    if (this.props.onClose) this.props.onClose(e);\n  }\n\n  onMaskClick(e: React.SyntheticEvent) {\n    if (!this.props.maskClosable) return;\n    if (e.target === e.currentTarget) this.close(e);\n  }\n\n  render() {\n    if (!CAN_USE_DOM) return null;\n\n    const props = this.props;\n\n    if (props.open) this.closed = false;\n\n    let drawer = this.getDrawerElement();\n    if (props.mask) {\n      drawer = React.createElement('div', {\n        style: this.getMaskStyle(),\n        key: 'mask-element',\n        className: `${props.prefixCls}-mask ${props.open ? `${props.prefixCls}-mask-hidden` : ''}`,\n        open: props.open,\n        ...props.maskProps,\n        onClick: this.onMaskClick\n      }, drawer);\n\n      const transitionName = this.getMaskTransitionName();\n      if (transitionName) {\n        drawer = React.createElement(Animate, {\n          key: 'mask',\n          showProp: 'open',\n          transitionAppear: true,\n          component: '',\n          transitionName,\n        }, drawer) as any;\n      }\n    }\n    return ReactDOM.createPortal(drawer, this.getContainer());\n  }\n\n}\n\nDrawer.defaultProps = {\n  prefixCls: 'rvr-drawer',\n  className: '',\n  mask: true,\n  open: false,\n  maskClosable: false,\n  touch: true,\n  touchThreshold: 10,\n  delay: 400,\n};\n\nexport default Drawer;\n"],"file":"drawer.js"}